/*
================================================================
  Set default parameters
================================================================

Any parameters provided by the user with a -params-file or
with -- command-line arguments will override the values
defined below.
*/
params {
    output_folder = "${launchDir}/results/"
    sample_bed_file = "${launchDir}/sample_bed.txt"

    genome_sample_str = "genome"
        
    // Set the containers to use for each component
    container__bedtools = "staphb/bedtools:2.31.1"
    container__bcftools = "staphb/bcftools:1.22"
}


/*
================================================================
  set profiles
================================================================
Set cpus/memory or create your own profile according
to your HPC
*/
profiles {
  singularity {
    singularity.autoMounts = true
    singularity.enabled = true
  }

  docker {
    docker.enabled = true
    docker.fixOwnership = true
  }

  slurm {
    process {
      executor = 'slurm'
      cpus = 1
      memory = '4 GB'
      time = '72h'
      beforeScript = 'ml singularity'

      withLabel: single_proc {
        cpus = 1
        memory = 16.GB
      }

      withLabel: low_proc {
        cpus = 2
        memory = 32.GB
      }

      withLabel: high_mem {
        cpus = 4
        memory = 370.GB
      }

      withLabel: med_proc {
        cpus = 8
        memory = 64.GB
      }

      withLabel: high_proc {
        cpus = 52
        memory = 370.GB
      }
    }
  }

  debug {
    process.beforeScript = 'echo $HOSTNAME'
  }
}

manifest {
  name = 'csvs-preproc-pipeline'
  author = 'Daniel López López'
  homePage = 'https://github.com/dlopez-bioinfo/csvs_af'
  mainScript = 'main.nf'
  nextflowVersion = '>=23.10'
  version = '1.0.0'
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']


dag {
  enabled = true
  file = "${params.output_folder}/report/pipeline_dag.svg"
  overwrite = true
}
report {
  enabled = true
  file = "${params.output_folder}/report/execution_report.html"
  overwrite = true
}
timeline {
  enabled = true
  file = "${params.output_folder}/report/execution_timeline.html"
  overwrite = true
}
trace {
  enabled = true
  file = "${params.output_folder}/report/execution_trace.txt"
  overwrite = true
}

nextflow.enable.moduleBinaries = true
